{"ast":null,"code":"import _toConsumableArray from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar data = {\n  dataLists: [{\n    Id: Math.random(),\n    Title: \"Read One Book\",\n    Description: \"To Kill a Mockingbird\",\n    completed: false\n  }, {\n    Id: Math.random(),\n    Title: \"Drink Water\",\n    Description: \"\",\n    completed: true\n  }, {\n    Id: Math.random(),\n    Title: \"Oil container\",\n    Description: \"eatable, petrol\",\n    completed: false\n  }]\n};\nexport default function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread({}, state, {\n        dataLists: [].concat(_toConsumableArray(state.dataLists), [action.data])\n      });\n\n    case 'REMOVE_TODO':\n      var filteredList = state.dataLists.filter(function (item) {\n        return item.Id !== action.id;\n      });\n      return _objectSpread({}, state, {\n        dataLists: filteredList\n      });\n\n    case 'UPDATE_TODO':\n      var dataLists = state.dataLists;\n      var target = dataLists.filter(function (item) {\n        return item.Id === action.data.Id;\n      })[0];\n      var index = dataLists.indexOf(target);\n      dataLists[index].Id = action.data.Id;\n      dataLists[index].Description = action.data.Description;\n      dataLists[index].Title = action.data.Title;\n      dataLists[index].completed = action.data.completed;\n      return _objectSpread({}, state, {\n        dataLists: _toConsumableArray(state.dataLists)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ruchi/Documents/learn/Todo-react-redux/src/reducers/index.js"],"names":["data","dataLists","Id","Math","random","Title","Description","completed","rootReducer","state","action","type","filteredList","filter","item","id","target","index","indexOf"],"mappings":";;AAAA,IAAMA,IAAI,GAAG;AACTC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,WAAW,EAAE,uBAHjB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GADO,EAOP;AACIL,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,KAAK,EAAE,aAFX;AAGIC,IAAAA,WAAW,EAAE,EAHjB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAPO,EAaP;AACIL,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,WAAW,EAAE,iBAHjB;AAIIC,IAAAA,SAAS,EAAE;AAJf,GAbO;AADF,CAAb;AAuBA,eAAe,SAASC,WAAT,GAA2C;AAAA,MAAtBC,KAAsB,uEAAdT,IAAc;AAAA,MAARU,MAAQ;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,+BACOF,KADP;AAEIR,QAAAA,SAAS,+BAAMQ,KAAK,CAACR,SAAZ,IAAuBS,MAAM,CAACV,IAA9B;AAFb;;AAIJ,SAAK,aAAL;AACI,UAAMY,YAAY,GAAGH,KAAK,CAACR,SAAN,CAAgBY,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACZ,EAAL,KAAYQ,MAAM,CAACK,EAAvB;AAAA,OAA3B,CAArB;AACA,+BACON,KADP;AAEIR,QAAAA,SAAS,EAAEW;AAFf;;AAIJ,SAAK,aAAL;AAAA,UACYX,SADZ,GAC0BQ,KAD1B,CACYR,SADZ;AAEI,UAAMe,MAAM,GAAGf,SAAS,CAACY,MAAV,CAAiB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACZ,EAAL,KAAYQ,MAAM,CAACV,IAAP,CAAYE,EAA5B;AAAA,OAArB,EAAqD,CAArD,CAAf;AACA,UAAMe,KAAK,GAAGhB,SAAS,CAACiB,OAAV,CAAkBF,MAAlB,CAAd;AACAf,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBf,EAAjB,GAAsBQ,MAAM,CAACV,IAAP,CAAYE,EAAlC;AACAD,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBX,WAAjB,GAA+BI,MAAM,CAACV,IAAP,CAAYM,WAA3C;AACAL,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBZ,KAAjB,GAAyBK,MAAM,CAACV,IAAP,CAAYK,KAArC;AACAJ,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBV,SAAjB,GAA6BG,MAAM,CAACV,IAAP,CAAYO,SAAzC;AACA,+BACOE,KADP;AAEIR,QAAAA,SAAS,qBAAMQ,KAAK,CAACR,SAAZ;AAFb;;AAIJ;AACI,aAAOQ,KAAP;AAzBR;AA2BH","sourcesContent":["const data = {\n    dataLists: [\n        {\n            Id: Math.random(),\n            Title: \"Read One Book\",\n            Description: \"To Kill a Mockingbird\",\n            completed: false,\n        },\n        {\n            Id: Math.random(),\n            Title: \"Drink Water\",\n            Description: \"\",\n            completed: true,\n        },\n        {\n            Id: Math.random(),\n            Title: \"Oil container\",\n            Description: \"eatable, petrol\",\n            completed: false,\n        }\n    ],\n};\n\nexport default function rootReducer(state = data, action) {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return {\n                ...state,\n                dataLists: [...state.dataLists, action.data]\n            }\n        case 'REMOVE_TODO':\n            const filteredList = state.dataLists.filter(item => item.Id !== action.id);\n            return {\n                ...state,\n                dataLists: filteredList,\n            }\n        case 'UPDATE_TODO':\n            const { dataLists } = state;\n            const target = dataLists.filter(item => item.Id === action.data.Id)[0];\n            const index = dataLists.indexOf(target);\n            dataLists[index].Id = action.data.Id;\n            dataLists[index].Description = action.data.Description;\n            dataLists[index].Title = action.data.Title;\n            dataLists[index].completed = action.data.completed;\n            return {\n                ...state,\n                dataLists: [...state.dataLists],\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}