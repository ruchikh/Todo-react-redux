{"ast":null,"code":"import _toConsumableArray from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar data = {\n  dataLists: [{\n    Id: Math.random(),\n    Title: \"Water Bottles\",\n    Quantity: \"20\",\n    Description: \"Minaral, Normal, filter\"\n  }, {\n    Id: Math.random(),\n    Title: \"Juice Bottles\",\n    Quantity: \"50\",\n    Description: \"Apple, orange, grapes, Pineaple\"\n  }, {\n    Id: Math.random(),\n    Title: \"Oil container\",\n    Quantity: \"50\",\n    Description: \"eatable, petrol\"\n  }]\n};\nexport default function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread({}, state, {\n        dataLists: [].concat(_toConsumableArray(state.dataLists), [action.data])\n      });\n\n    case 'REMOVE_TODO':\n      var filteredList = state.dataLists.filter(function (item) {\n        return item.id !== action.id;\n      });\n      return _objectSpread({}, state, {\n        dataList: filteredList\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ruchi/Documents/learn/Todo-react-redux/src/reducers/index.js"],"names":["data","dataLists","Id","Math","random","Title","Quantity","Description","rootReducer","state","action","type","filteredList","filter","item","id","dataList"],"mappings":";;AAAA,IAAMA,IAAI,GAAG;AACTC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,WAAW,EACP;AALR,GADO,EAQP;AACIL,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,WAAW,EAAE;AAJjB,GARO,EAcP;AACIL,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,WAAW,EAAE;AAJjB,GAdO;AADF,CAAb;AAwBA,eAAe,SAASC,WAAT,GAA2C;AAAA,MAAtBC,KAAsB,uEAAdT,IAAc;AAAA,MAARU,MAAQ;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,+BACOF,KADP;AAEIR,QAAAA,SAAS,+BAAMQ,KAAK,CAACR,SAAZ,IAAuBS,MAAM,CAACV,IAA9B;AAFb;;AAIJ,SAAK,aAAL;AACI,UAAMY,YAAY,GAAGH,KAAK,CAACR,SAAN,CAAgBY,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAvB;AAAA,OAA3B,CAArB;AACA,+BACON,KADP;AAEIO,QAAAA,QAAQ,EAAEJ;AAFd;;AAIJ;AACI,aAAOH,KAAP;AAbR;AAeH","sourcesContent":["const data = {\n    dataLists: [\n        {\n            Id: Math.random(),\n            Title: \"Water Bottles\",\n            Quantity: \"20\",\n            Description:\n                \"Minaral, Normal, filter\"\n        },\n        {\n            Id: Math.random(),\n            Title: \"Juice Bottles\",\n            Quantity: \"50\",\n            Description: \"Apple, orange, grapes, Pineaple\"\n        },\n        {\n            Id: Math.random(),\n            Title: \"Oil container\",\n            Quantity: \"50\",\n            Description: \"eatable, petrol\"\n        }\n    ],\n};\n\nexport default function rootReducer(state = data, action) {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return {\n                ...state,\n                dataLists: [...state.dataLists, action.data]\n            }\n        case 'REMOVE_TODO':\n            const filteredList = state.dataLists.filter(item => item.id !== action.id);\n            return {\n                ...state,\n                dataList: filteredList\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}