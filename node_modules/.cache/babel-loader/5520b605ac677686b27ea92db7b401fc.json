{"ast":null,"code":"import _defineProperty from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruchi/Documents/learn/Todo-react-redux/src/components/MyTodos.js\";\nimport React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CreateData from \"./CreateData.js\";\nimport DataLists from \"./DataLists.js\";\nimport { connect } from 'react-redux';\n\nvar MyTodos = /*#__PURE__*/function (_Component) {\n  _inherits(MyTodos, _Component);\n\n  function MyTodos(props) {\n    var _this;\n\n    _classCallCheck(this, MyTodos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyTodos).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.addData = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          Title = _this$state.Title,\n          Quantity = _this$state.Quantity,\n          Description = _this$state.Description;\n      if (!Title || !Quantity || !Description) return;\n      var todo = {\n        Id: Math.random(),\n        Title: Title,\n        Quantity: Quantity,\n        Description: Description\n      };\n\n      _this.reset();\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        Title: \"\",\n        Quantity: \"\",\n        Description: \"\"\n      });\n    };\n\n    _this.removeData = function (Id) {\n      var dataLists = _this.state.dataLists.filter(function (data) {\n        return data.Id !== Id;\n      });\n\n      _this.setState({\n        dataLists: dataLists\n      });\n    };\n\n    _this.handleUpdate = function (e, Id) {\n      var index = _this.state.dataLists.findIndex(function (data) {\n        return data.Id === Id;\n      });\n\n      var data = Object.assign({}, _this.state.dataLists[index]);\n\n      _this.setState({\n        Id: data.Id,\n        Title: data.Title,\n        Quantity: data.Quantity,\n        Description: data.Description,\n        isEditing: true\n      });\n    };\n\n    _this.saveUpdate = function (e, Id) {\n      var newData = _this.state.dataLists.map(function (data) {\n        if (data.Id === Id) {\n          return {\n            Title: _this.state.Title,\n            Quantity: _this.state.Quantity,\n            Description: _this.state.Description\n          };\n        }\n\n        return data;\n      });\n\n      _this.setState({\n        dataLists: newData,\n        isEditing: false\n      }, function () {\n        _this.reset();\n      });\n    };\n\n    _this.state = {\n      Id: null,\n      Title: \"\",\n      Quantity: \"\",\n      Description: \"\",\n      isEditing: false\n    };\n    return _this;\n  }\n\n  _createClass(MyTodos, [{\n    key: \"render\",\n    value: function render() {\n      var state = this.state,\n          addData = this.addData,\n          handleChange = this.handleChange,\n          saveUpdate = this.saveUpdate,\n          removeData = this.removeData,\n          handleUpdate = this.handleUpdate,\n          Id = state.Id,\n          Title = state.Title,\n          Quantity = state.Quantity,\n          Description = state.Description,\n          isEditing = state.isEditing;\n      var dataLists = this.props.dataLists;\n      console.log(dataLists, 'check');\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        ls: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CreateData, {\n        Id: Id,\n        Title: Title,\n        Description: Description,\n        Quantity: Quantity,\n        addData: addData,\n        handleChange: handleChange,\n        saveUpdate: saveUpdate,\n        isEditing: isEditing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        ls: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DataLists, {\n        lists: dataLists,\n        removeData: removeData,\n        handleUpdate: handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return MyTodos;\n}(Component); // const mapStateToProps = (state) => {\n//   console.log(state, 'state')\n//   return {\n//     dataLists: state.dataLists,\n//   }\n// }\n\n\nexport default connect(mapStateToProps)(MyTodos);","map":{"version":3,"sources":["/Users/ruchi/Documents/learn/Todo-react-redux/src/components/MyTodos.js"],"names":["React","Component","Grid","CreateData","DataLists","connect","MyTodos","props","handleChange","e","setState","target","name","value","addData","preventDefault","state","Title","Quantity","Description","todo","Id","Math","random","reset","removeData","dataLists","filter","data","handleUpdate","index","findIndex","Object","assign","isEditing","saveUpdate","newData","map","console","log","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CreateData from \"./CreateData.js\";\nimport DataLists from \"./DataLists.js\";\nimport { connect } from 'react-redux';\n\nclass MyTodos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Id: null,\n      Title: \"\",\n      Quantity: \"\",\n      Description: \"\",\n      isEditing: false\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //To add data to the dataList array\n  addData = e => {\n    e.preventDefault();\n    const { Title, Quantity, Description } = this.state;\n    if (!Title || !Quantity || !Description) return;\n\n    let todo = {\n      Id: Math.random(),\n      Title: Title,\n      Quantity: Quantity,\n      Description: Description\n    }\n\n    this.reset();\n  };\n\n  //To reset the form fields\n  reset = () => {\n    this.setState({\n      Title: \"\",\n      Quantity: \"\",\n      Description: \"\"\n    });\n  };\n\n  //To remove the data from the list\n  removeData = Id => {\n    let dataLists = this.state.dataLists.filter(data => {\n      return data.Id !== Id;\n    });\n\n    this.setState({\n      dataLists\n    });\n  };\n\n  //To handle the data Update\n  handleUpdate = (e, Id) => {\n    const index = this.state.dataLists.findIndex(data => {\n      return data.Id === Id;\n    });\n    const data = Object.assign({}, this.state.dataLists[index]);\n    this.setState({\n      Id: data.Id,\n      Title: data.Title,\n      Quantity: data.Quantity,\n      Description: data.Description,\n      isEditing: true\n    });\n  };\n\n  //To save the updated data\n  saveUpdate = (e, Id) => {\n    const newData = this.state.dataLists.map(data => {\n      if (data.Id === Id) {\n        return {\n          Title: this.state.Title,\n          Quantity: this.state.Quantity,\n          Description: this.state.Description\n        };\n      }\n      return data;\n    });\n    this.setState(\n      {\n        dataLists: newData,\n        isEditing: false\n      },\n      () => {\n        this.reset();\n      }\n    );\n  };\n\n  render() {\n    const { state, addData, handleChange, saveUpdate, removeData, handleUpdate } = this,\n      {\n        Id,\n        Title,\n        Quantity,\n        Description,\n        isEditing\n      } = state;\n    const { dataLists } = this.props;\n    console.log(dataLists, 'check');\n    return (\n      <Grid container spacing={0}>\n        <Grid item ls={6} md={6} sm={12} xs={12}>\n          <CreateData\n            Id={Id}\n            Title={Title}\n            Description={Description}\n            Quantity={Quantity}\n            addData={addData}\n            handleChange={handleChange}\n            saveUpdate={saveUpdate}\n            isEditing={isEditing}\n          />\n        </Grid>\n        <Grid item ls={6} md={6} sm={12} xs={12}>\n          <DataLists\n            lists={dataLists}\n            removeData={removeData}\n            handleUpdate={handleUpdate}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   console.log(state, 'state')\n//   return {\n//     dataLists: state.dataLists,\n//   }\n// }\n\nexport default connect(mapStateToProps)(MyTodos);\n"]},"metadata":{},"sourceType":"module"}