{"ast":null,"code":"import _toConsumableArray from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar data = {\n  dataLists: [{\n    id: Math.random(),\n    title: \"Read One Book\",\n    description: \"To Kill a Mockingbird\",\n    completed: false\n  }, {\n    id: Math.random(),\n    title: \"Drink Water\",\n    description: \"In Morning\",\n    completed: true\n  }, {\n    id: Math.random(),\n    title: \"Play Cricket\",\n    description: \"In Evening\",\n    completed: false\n  }]\n};\nexport default function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread({}, state, {\n        dataLists: [].concat(_toConsumableArray(state.dataLists), [action.data])\n      });\n\n    case 'REMOVE_TODO':\n      var filteredList = state.dataLists.filter(function (item) {\n        return item.Id !== action.id;\n      });\n      return _objectSpread({}, state, {\n        dataLists: filteredList\n      });\n\n    case 'UPDATE_TODO':\n      var dataLists = state.dataLists;\n      var target = dataLists.filter(function (item) {\n        return item.id === action.data.id;\n      })[0];\n      var index = dataLists.indexOf(target);\n      dataLists[index].id = action.data.id;\n      dataLists[index].description = action.data.description;\n      dataLists[index].title = action.data.title;\n      dataLists[index].completed = action.data.completed;\n      return _objectSpread({}, state, {\n        dataLists: _toConsumableArray(state.dataLists)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ruchi/Documents/learn/Todo-react-redux/src/reducers/index.js"],"names":["data","dataLists","id","Math","random","title","description","completed","rootReducer","state","action","type","filteredList","filter","item","Id","target","index","indexOf"],"mappings":";;AAAA,IAAMA,IAAI,GAAG;AACZC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADL;AAECC,IAAAA,KAAK,EAAE,eAFR;AAGCC,IAAAA,WAAW,EAAE,uBAHd;AAICC,IAAAA,SAAS,EAAE;AAJZ,GADU,EAOV;AACCL,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADL;AAECC,IAAAA,KAAK,EAAE,aAFR;AAGCC,IAAAA,WAAW,EAAE,YAHd;AAICC,IAAAA,SAAS,EAAE;AAJZ,GAPU,EAaV;AACCL,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADL;AAECC,IAAAA,KAAK,EAAE,cAFR;AAGCC,IAAAA,WAAW,EAAE,YAHd;AAICC,IAAAA,SAAS,EAAE;AAJZ,GAbU;AADC,CAAb;AAuBA,eAAe,SAASC,WAAT,GAA2C;AAAA,MAAtBC,KAAsB,uEAAdT,IAAc;AAAA,MAARU,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,UAAL;AACC,+BACIF,KADJ;AAECR,QAAAA,SAAS,+BAAMQ,KAAK,CAACR,SAAZ,IAAuBS,MAAM,CAACV,IAA9B;AAFV;;AAID,SAAK,aAAL;AACC,UAAMY,YAAY,GAAGH,KAAK,CAACR,SAAN,CAAgBY,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACR,EAAvB;AAAA,OAA3B,CAArB;AACA,+BACIO,KADJ;AAECR,QAAAA,SAAS,EAAEW;AAFZ;;AAID,SAAK,aAAL;AAAA,UACSX,SADT,GACuBQ,KADvB,CACSR,SADT;AAEC,UAAMe,MAAM,GAAGf,SAAS,CAACY,MAAV,CAAiB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACZ,EAAL,KAAYQ,MAAM,CAACV,IAAP,CAAYE,EAA5B;AAAA,OAArB,EAAqD,CAArD,CAAf;AACA,UAAMe,KAAK,GAAGhB,SAAS,CAACiB,OAAV,CAAkBF,MAAlB,CAAd;AACAf,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBf,EAAjB,GAAsBQ,MAAM,CAACV,IAAP,CAAYE,EAAlC;AACAD,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBX,WAAjB,GAA+BI,MAAM,CAACV,IAAP,CAAYM,WAA3C;AACAL,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBZ,KAAjB,GAAyBK,MAAM,CAACV,IAAP,CAAYK,KAArC;AACAJ,MAAAA,SAAS,CAACgB,KAAD,CAAT,CAAiBV,SAAjB,GAA6BG,MAAM,CAACV,IAAP,CAAYO,SAAzC;AACA,+BACIE,KADJ;AAECR,QAAAA,SAAS,qBAAMQ,KAAK,CAACR,SAAZ;AAFV;;AAID;AACC,aAAOQ,KAAP;AAzBF;AA2BA","sourcesContent":["const data = {\n\tdataLists: [\n\t\t{\n\t\t\tid: Math.random(),\n\t\t\ttitle: \"Read One Book\",\n\t\t\tdescription: \"To Kill a Mockingbird\",\n\t\t\tcompleted: false,\n\t\t},\n\t\t{\n\t\t\tid: Math.random(),\n\t\t\ttitle: \"Drink Water\",\n\t\t\tdescription: \"In Morning\",\n\t\t\tcompleted: true,\n\t\t},\n\t\t{\n\t\t\tid: Math.random(),\n\t\t\ttitle: \"Play Cricket\",\n\t\t\tdescription: \"In Evening\",\n\t\t\tcompleted: false,\n\t\t}\n\t],\n};\n\nexport default function rootReducer(state = data, action) {\n\tswitch (action.type) {\n\t\tcase 'ADD_TODO':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdataLists: [...state.dataLists, action.data]\n\t\t\t}\n\t\tcase 'REMOVE_TODO':\n\t\t\tconst filteredList = state.dataLists.filter(item => item.Id !== action.id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdataLists: filteredList,\n\t\t\t}\n\t\tcase 'UPDATE_TODO':\n\t\t\tconst { dataLists } = state;\n\t\t\tconst target = dataLists.filter(item => item.id === action.data.id)[0];\n\t\t\tconst index = dataLists.indexOf(target);\n\t\t\tdataLists[index].id = action.data.id;\n\t\t\tdataLists[index].description = action.data.description;\n\t\t\tdataLists[index].title = action.data.title;\n\t\t\tdataLists[index].completed = action.data.completed;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdataLists: [...state.dataLists],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}"]},"metadata":{},"sourceType":"module"}