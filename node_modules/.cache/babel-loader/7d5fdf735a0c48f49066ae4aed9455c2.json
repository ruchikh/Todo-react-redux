{"ast":null,"code":"import _defineProperty from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruchi/Documents/learn/Todo-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruchi/Documents/learn/Todo-react-redux/src/components/MyTodos.js\";\nimport React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CreateData from \"./CreateData.js\";\nimport DataLists from \"./DataLists.js\";\nimport { connect } from 'react-redux';\nimport { addTodo, removeTodo, updateTodo } from \"../actions/index.js\";\n\nvar MyTodos = /*#__PURE__*/function (_Component) {\n  _inherits(MyTodos, _Component);\n\n  function MyTodos(props) {\n    var _this;\n\n    _classCallCheck(this, MyTodos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyTodos).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.addData = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          title = _this$state.title,\n          completed = _this$state.completed,\n          description = _this$state.description;\n      if (!title || !description) return;\n      var todo = {\n        id: Math.random(),\n        title: title,\n        description: description,\n        completed: completed\n      };\n\n      _this.props.dispatch(addTodo(todo));\n\n      _this.reset();\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        title: \"\",\n        description: \"\",\n        completed: false,\n        isEditing: false\n      });\n    };\n\n    _this.removeData = function (Id) {\n      _this.props.dispatch(removeTodo(id));\n    };\n\n    _this.handleUpdate = function (Id) {\n      var dataLists = _this.props.dataLists;\n      var targetObj = dataLists.filter(function (item) {\n        return item.id === id;\n      })[0];\n\n      _this.setState({\n        id: targetObj.id,\n        title: targetObj.title,\n        description: targetObj.description,\n        completed: targetObj.completed,\n        isEditing: true\n      });\n    };\n\n    _this.handleCheckbox = function () {\n      _this.setState({\n        completed: !_this.state.completed\n      });\n    };\n\n    _this.saveUpdate = function (e) {\n      e.preventDefault();\n      var _this$state2 = _this.state,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          id = _this$state2.id,\n          completed = _this$state2.completed,\n          isEditing = _this$state2.isEditing;\n      var newData = {\n        Title: Title,\n        Description: Description,\n        Id: Id,\n        completed: completed\n      };\n\n      _this.props.dispatch(updateTodo(newData));\n\n      _this.reset();\n    };\n\n    _this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      completed: false,\n      isEditing: false\n    };\n    return _this;\n  }\n\n  _createClass(MyTodos, [{\n    key: \"render\",\n    value: function render() {\n      var state = this.state,\n          addData = this.addData,\n          handleChange = this.handleChange,\n          saveUpdate = this.saveUpdate,\n          removeData = this.removeData,\n          handleUpdate = this.handleUpdate,\n          handleCheckbox = this.handleCheckbox,\n          Id = state.Id,\n          Title = state.Title,\n          Description = state.Description,\n          isEditing = state.isEditing,\n          completed = state.completed;\n      var dataLists = this.props.dataLists;\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        ls: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CreateData, {\n        Id: Id,\n        Title: Title,\n        Description: Description,\n        addData: addData,\n        handleChange: handleChange,\n        saveUpdate: saveUpdate,\n        isEditing: isEditing,\n        completed: completed,\n        handleCheckbox: handleCheckbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        ls: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DataLists, {\n        lists: dataLists,\n        removeData: removeData,\n        handleUpdate: handleUpdate,\n        handleCheckbox: handleCheckbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return MyTodos;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dataLists: state.dataLists\n  };\n};\n\nexport default connect(mapStateToProps)(MyTodos);","map":{"version":3,"sources":["/Users/ruchi/Documents/learn/Todo-react-redux/src/components/MyTodos.js"],"names":["React","Component","Grid","CreateData","DataLists","connect","addTodo","removeTodo","updateTodo","MyTodos","props","handleChange","e","setState","target","name","value","addData","preventDefault","state","title","completed","description","todo","id","Math","random","dispatch","reset","isEditing","removeData","Id","handleUpdate","dataLists","targetObj","filter","item","handleCheckbox","saveUpdate","newData","Title","Description","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CreateData from \"./CreateData.js\";\nimport DataLists from \"./DataLists.js\";\nimport { connect } from 'react-redux';\nimport { addTodo, removeTodo, updateTodo } from \"../actions/index.js\";\n\nclass MyTodos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      completed: false,\n      isEditing: false\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //To add data to the dataList array\n  addData = e => {\n    e.preventDefault();\n    const { title, completed, description } = this.state;\n    if (!title || !description) return;\n\n    let todo = {\n      id: Math.random(),\n      title: title,\n      description: description,\n      completed,\n    }\n    this.props.dispatch(addTodo(todo));\n    this.reset();\n  };\n\n  //To reset the form fields\n  reset = () => {\n    this.setState({\n      title: \"\",\n      description: \"\",\n      completed: false,\n      isEditing: false,\n    });\n  };\n\n  //To remove the data from the list\n  removeData = Id => {\n    this.props.dispatch(removeTodo(id))\n  };\n\n  //To handle the data Update\n  handleUpdate = (Id) => {\n    const { dataLists } = this.props;\n    const targetObj = dataLists.filter(item => item.id === id)[0];\n\n    this.setState({\n      id: targetObj.id,\n      title: targetObj.title,\n      description: targetObj.description,\n      completed: targetObj.completed,\n      isEditing: true\n    });\n  };\n\n  handleCheckbox = () => {\n    this.setState({ completed: !this.state.completed })\n  }\n  //To save the updated data\n  saveUpdate = (e) => {\n    e.preventDefault();\n    const { title, description, id, completed, isEditing } = this.state;\n    const newData = {\n      Title,\n      Description,\n      Id,\n      completed,\n    }\n    this.props.dispatch(updateTodo(newData));\n    this.reset();\n  };\n\n  render() {\n    const { state, addData, handleChange, saveUpdate, removeData, handleUpdate, handleCheckbox } = this,\n      {\n        Id,\n        Title,\n        Description,\n        isEditing,\n        completed,\n      } = state;\n    const { dataLists } = this.props;\n    return (\n      <Grid container spacing={0}>\n        <Grid item ls={6} md={6} sm={12} xs={12}>\n          <CreateData\n            Id={Id}\n            Title={Title}\n            Description={Description}\n            addData={addData}\n            handleChange={handleChange}\n            saveUpdate={saveUpdate}\n            isEditing={isEditing}\n            completed={completed}\n            handleCheckbox={handleCheckbox}\n          />\n        </Grid>\n        <Grid item ls={6} md={6} sm={12} xs={12}>\n          <DataLists\n            lists={dataLists}\n            removeData={removeData}\n            handleUpdate={handleUpdate}\n            handleCheckbox={handleCheckbox}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    dataLists: state.dataLists,\n  }\n}\n\nexport default connect(mapStateToProps)(MyTodos);\n"]},"metadata":{},"sourceType":"module"}